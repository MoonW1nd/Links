export const articles = [
  {
    id: '1',
    date: '2018-05-03T15:03:23.000Z',
    title: 'Classes in JavaScript - Explained',
    link: 'http://blog.brew.com.hk/classes-in-javascript-explained/',
    text: 'This article is an extended adaptation from Understanding Prototypes in JavaScript. This article is very in-depth, and may require a second reading to really grok it. JavaScript is unique because it can be used as an object-orientated programming (OOP) language, but it also has a lot of functional aspects built into it. Furthermore, unlike classic OOP languages such as Java, its inheritance model is not class-based, but rather prototype-based. So what\'s the difference?',
    tags: ['javaScript'],
  },
  {
    id: '2',
    date: '2018-05-03T15:03:23.000Z',
    title: 'Операторы ?., ?? и |>: будущие возможности JavaScript, которые вам понравятся',
    link: 'https://habr.com/company/ruvds/blog/353446/',
    text: 'Джастин Фуллер, автор материала, перевод которого мы сегодня публикуем, предлагает рассмотреть три новых возможности, появление которых ожидается в JavaScript в обозримом будущем. Сначала он расскажет о процессе развития JS, а после этого представит обзор этих возможностей и покажет примеры их использования. Речь пойдёт об операторах ?., ?? и |>.',
    tags: ['javaScript'],
  },
  {
    id: '3',
    date: '2018-04-12T15:03:23.000Z',
    title: 'Scroll to the future',
    link: 'https://evilmartians.com/chronicles/scroll-to-the-future-modern-javascript-css-scrolling-implementations',
    text: 'Прокрутка в будущее! Вообще всё, что вы хотели знать про реализацию прокрутки, но боялись спросить. Анна Селезнёва и Андрей Барнов в блоге Злых марсиан',
    tags: ['javaScript'],
  },
  {
    id: '4',
    date: '2018-04-14T15:03:23.000Z',
    title: 'Веб-воркеры в JavaScript: безопасный параллелизм',
    link: 'https://habr.com/company/ruvds/blog/352828/',
    text: 'В материале рассмотрены особенности использования веб-воркеров для решения задач, которые слишком тяжелы для главного потока. В частности, речь здесь пойдёт о том, как организовать обмен данными между главным потоком и потоком веб-воркера. Здесь же будет рассмотрена пара примеров, иллюстрирующих различные сценарии использования веб-воркеров.',
    tags: ['javaScript'],
  },
  {
    id: '5',
    date: '2018-05-04T15:03:23.000Z',
    title: 'Классы и фабричные функции в JavaScript. Что выбрать?',
    link: 'https://habr.com/company/ruvds/blog/352198/',
    text: 'В JavaScript существуют разные способы создания объектов. В частности, речь идёт о конструкциях, использующих ключевое слово class и о так называемых фабричных функциях (Factory Function). Автор материала, перевод которого мы публикуем сегодня, исследует и сравнивает эти две концепции в поисках ответа на вопрос о плюсах и минусах каждой из них.',
    tags: ['javaScript'],
  },
  {
    id: '6',
    date: '2018-05-03T15:03:23.000Z',
    title: 'Элегантные паттерны современного JavaScript: RORO',
    link: 'https://habr.com/company/ruvds/blog/350536/',
    text: 'В этой статье Билл Соро хочет рассказать о замечательном маленьком паттерне, которым он уже какое-то время с удовольствием пользуется. Он надеется, что этот шаблон проектирования пригодится и другим программистам. Билл говорит, что не считает себя первооткрывателем этого паттерна, скорее, речь идёт о том, что он увидел нечто подобное в чьём-то коде, а потом адаптировал это под свои нужды.',
    tags: ['javaScript'],
  },
  {
    id: '7',
    date: '2018-05-03T15:03:23.000Z',
    title: 'Элегантные паттерны современного JavaScript: Ice Factory',
    link: 'https://habr.com/company/ruvds/blog/351800/',
    text: 'Предлагаем вашему вниманию перевод очередного материала Билла Соро, который посвящён шаблонам проектирования в JavaScript. В прошлый раз мы рассказывали о паттерне RORO, а сегодня нашей темой будет шаблон Ice Factory. Если в двух словах, то этот шаблон представляет собой функцию, которая возвращает «замороженный» объект. Это — очень важный и мощный паттерн, и разговор о нём мы начнём с описания одной из проблем JS, на решение которой он направлен.',
    tags: ['javaScript'],
  },
  {
    id: '8',
    date: '2018-03-07T15:03:23.000Z',
    title: 'CSS Paint API — New and Glossy, but What Is It For?',
    link: 'https://www.codementor.io/brettjephson/css-paint-api-new-and-glossy-but-what-is-it-for-gpd44fl03',
    text: 'Обзор нового The CSS Paint API, доступного в Chrome 65',
    tags: ['javaScript', 'css'],
  },
  {
    id: '9',
    date: '2018-03-13T15:03:23.000Z',
    title: 'Designing Button States',
    link: 'https://cloudfour.com/thinks/designing-button-states/',
    text: 'Дизайн состояний кнопки. Тайлер Стика с введением в основные принципы создания удобных, доступных и понятных кнопок',
    tags: ['UIUX', 'design'],
  },
  {
    id: '10',
    date: '2018-02-20T15:03:23.000Z',
    title: '7 Practical Tips for Cheating at Design',
    link: 'https://medium.com/refactoring-ui/7-practical-tips-for-cheating-at-design-40c736799886',
    text: '7 практических советов о том, как улучшить ваш проект, даже если у вас нет опыта в разработке дизайна. На мой взгляд очень интересно и полезно для тех кто интересуется дизайном.',
    tags: ['design'],
  },
  {
    id: '11',
    date: '2018-02-20T15:03:23.000Z',
    title: 'Что не так с Emoji. Алексей Авдеев',
    link: 'https://youtu.be/DUwZpLBSuiI',
    text: 'Почему эмоджи выглядят по-разному в разных браузерах? Что делать, если дизайнеры говорят, что все смайлики должны выглядеть, как на Айфоне? Решаем проблему, попутно разбираясь в спецификациях Emoji и Unicode.',
    tags: ['design', 'youTube'],
  },
  {
    id: '12',
    date: '2016-08-25T15:03:23.000Z',
    title: 'Введение в каррирование в JavaScript',
    link: 'http://prgssr.ru/development/vvedenie-v-karrirovanie-v-javascript.html',
    text: 'Каррирование или частичное применение это одна из техник функционального программирования, которая может показаться странной людям, знакомым с более традиционными способами написания JavaScript. Но при правильном применении каррирование действительно способно сделать ваш JavaScript более читаемым.',
    tags: ['javaScript'],
  },
  {
    id: '13',
    date: '2018-05-12T15:03:23.000Z',
    title: 'JavaScript Symbols, Iterators, Generators, Async/Await, and Async Iterators — All Explained Simply',
    link: 'https://medium.freecodecamp.org/some-of-javascripts-most-useful-features-can-be-tricky-let-me-explain-them-4003d7bbed32?gi=3d4c3b0091e6',
    text: 'Хорошее объяснение применения Символов, Итераторов, Генераторов, Async\/Awayt и асинхронных итераторов.',
    tags: ['javaScript'],
  },
  {
    id: '14',
    date: '2018-05-12T15:03:23.000Z',
    title: 'Асинхронность в JavaScript. Таймеры, промисы, async\/await',
    link: 'https://youtu.be/Ih6Q7ka2eSQ',
    text: 'Один из лучших вебинаров по объяснению асинхронности в JavaScript. ',
    tags: ['javaScript', 'youTube'],
  },
];
